{% from "common/topics.njk" import panopto, slugify, topic_followup, topic_preamble with context %}


<!-- ---------------------------------------------------------------------------- -->
{% call topic_preamble("Requirements: Use Cases", reuse=false) %}

Last week, you learned a number of techniques for specifying requirements. There's one more left, which we'll cover this week.

{% endcall %}
<!-- ---------------------------------------------------------------------------- -->
{% call topic_preamble("Design: High-Level View", reuse=false) %}

In the tP, you start with a code base that already has a certain design. The next few topics look at how one can come up with such a design.

{% endcall %}
<!-- ---------------------------------------------------------------------------- -->
{% call topic_followup("design-introduction-what") %}

Now that you know there are two kinds of 'design', also note that this module focuses more on the internal design rather than the external design.

{% endcall %}
<!-- ---------------------------------------------------------------------------- -->
{{ topic_preamble("Design: Fundamentals") }}
<!-- ---------------------------------------------------------------------------- -->
{% call topic_preamble("IDEs: Advanced Features", reuse=false) %}

In case you are the type who want to become a 'power user' of IDEs (it's not a bad idea, given the IDE is like the primary tool of a software engineer), given below are some more things you can do with IDEs.

{% endcall %}
<!-- ---------------------------------------------------------------------------- -->
{% call topic_preamble("Integration Approaches", reuse=false) %}

As you start adding new code to the tP, let's also become aware of various approaches in integrating new code to a product.

{% endcall %}
<!-- ---------------------------------------------------------------------------- -->
{{ topic_preamble("Project Mgt: Scheduling and Tracking") }}
<!-- ---------------------------------------------------------------------------- -->
{% call topic_preamble("Project Mgt: Workflows", reuse=false) %}

Continuing on the same theme, given below are more practices used in managing projects, particularly related to the revision control aspect.

{% endcall %}
<!-- ---------------------------------------------------------------------------- -->
